9ld5h

server

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

struct sockaddr_in serv_addr,cli_addr;
unsigned short port=5006;
char serv_ip[]="192.168.24.19";
char rbuff[128],sbuff[128];

int main() {
    int sockfd= socket(AF_INET,SOCK_STREAM,0);
    if (sockfd<0){
        printf("\nSERVER ERROR:Cannot create socket.\n");
        close(sockfd);
        exit(1);
    }
    
    serv_addr.sin_family=AF_INET;
    serv_addr.sin_port=htons(port);
    inet_aton(serv_ip,(&serv_addr.sin_addr));
    
    printf("\nTCP ECHO SERVER\n");
    
    int bindfd=bind(sockfd,(struct sockaddr*)&serv_addr,sizeof(serv_addr));
    if (bindfd<0){
        printf("\nSERVER ERROR:Cannot bind.\n");
        close(sockfd);
        exit(1);
    }
    
    int l=listen(sockfd,5);
    if (l<0){
        printf("\nSERVER ERROR:Cannot listen.\n");
        close(sockfd);
        exit(1);    
    }
    
    int cli_addr_len=sizeof(cli_addr);
    
    while(1) {
        printf("\nSERVER: Listening for clients....Press Ctrl+C to stop server.\n");
        int acceptfd=accept(sockfd,(struct sockaddr*)&cli_addr,&cli_addr_len);
        if (acceptfd<0) {
            printf("\nSERVER ERROR:Cannot accept from client.\n");
            close(sockfd);
            exit(1);
        }
        
        printf("\nConnection from client %s accepted\n",inet_ntoa(cli_addr.sin_addr));
        
        for ( ; ; ) {
            int r=read(acceptfd,rbuff,128);
        if (r<0)
            printf("\nSERVER ERROR:Canno read\n");
        else {
            rbuff[r]='\0';
            printf("\nMessage received is %s.\n",rbuff);
            
            int p=system(rbuff);
            if (p==0) {
                
                strcat(rbuff,">output.txt");
                system(rbuff);
                strcpy(sbuff,"Valid command");
            }
            else
                strcpy(sbuff,"Invalid Command");
                
            int w=write(acceptfd,sbuff,128);
            if (w<0) 
                printf("\nSERVER ERROR: Cannot send messages to the client.\n");
        }
        }
        
    }
    return 0;
}

client:

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

struct sockaddr_in serv_addr,cli_addr;
unsigned short port=5006;
char serv_ip[]="192.168.24.19";
char rbuff[128],sbuff[128],buff[128];
FILE *fp;

int main() {
    int skfd=socket(AF_INET,SOCK_STREAM,0);
    if (skfd<0){
        printf("\nSERVER ERROR:Cannot create socket.\n");
        close(skfd);
        exit(1);
    }
    
    serv_addr.sin_family=AF_INET;
    serv_addr.sin_port=htons(port);
    inet_aton(serv_ip,(&serv_addr.sin_addr));
    
    int connfd=connect(skfd,(struct sockaddr*)&serv_addr,sizeof(serv_addr));
    if (connfd<0) {
        printf("\nCLIENT ERROR:Cannot connect\n");
        close(skfd);
        exit(1);
    }

    printf("\nCLIENT:Connected to the server.\n");    
    
    while(1) {
        printf("\nEnter a message: \n");
        gets(sbuff);
        
        
        int w=write(skfd,sbuff,128);
        if (w<0) {
            printf("\nCLIENT ERROR:Cannot write\n");
            close(skfd);
            exit(1);
        }
        
        
        
        int r=read(skfd,rbuff,128);
        if (r<0)
            printf("\nCLIENT ERROR: Cannot receive message from the server.\n");
        else {
            printf("\nCLIENT: Message from echo server: %s\n",rbuff);
            fp = fopen("output.txt","r");
            while (fgets(buff, 2048, fp)!=NULL)
                printf("%s",buff);
                  
            
        }
        
    }
    
    return 0;
}

