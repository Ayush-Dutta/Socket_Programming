#include<stdio.h>
#include<stdlib.h>
#include<sys/socket.h>
#include<sys/types.h>
#include<netinet/in.h>
#include<arpa/inet.h>
#include<string.h>

struct sockaddr_in serv_addr, cli_addr;
int cli_addr_len,sockfd,acceptfd,r,w;

unsigned int port=5020;
char ip[]="127.0.0.1";

FILE *fptr;
FILE *fp1;
FILE *fp2;

int main()
{
    sockfd=socket(AF_INET,SOCK_STREAM,0);
    if(sockfd<0)
    {
        printf("\nSERVER ERROR: Can't create socket.");
        close(sockfd);
        exit(1);
    }
    serv_addr.sin_family=AF_INET;
    serv_addr.sin_port=htons(port);
        inet_aton(ip,(&serv_addr.sin_addr));
        printf("\nSERVER\n");
    
        int bindfd=bind(sockfd,(struct sockaddr*)&serv_addr,sizeof(serv_addr));
        if(bindfd<0)
        {
            printf("\nSERVER ERRO: Cannot bind.\n");
            close(sockfd);
            exit(1);
        }
        while(1)
        {
        int q=listen(sockfd,5);
            if(q<0)
            {
                printf("\nSERVER ERROR: Cannot listen.\n");
                close(sockfd);
                exit(1);
            }
            cli_addr_len=sizeof(cli_addr);
            printf("\nListening for the client....ctrl+c to exit the server.\n");
        
        acceptfd = accept(sockfd, (struct sockaddr*)&cli_addr, &cli_addr_len);
        if(acceptfd< 0)
        {
            printf("\nSERVER ERROR : Cannot accept client connections.\n");
            close(sockfd);
            exit(1);
        }
        printf("\nSERVER: Connection from client %s accepted.\n", inet_ntoa(cli_addr.sin_addr));
        
        
        while(1)
        {
            char buff1[256]="";char buff2[256]="";char buff3[256]="";char buff4[256]="";char buff5[256]="";char buff6[256]="";
            char buff7[256]="";char buff8[256]="";char ll1[256]="";
            
            r=read(acceptfd,buff1,256);
            if(r<0)
            {
                printf("\nSERVER ERROR: Cannot read.\n");
                close(sockfd);
                exit(1);
            }
            else
            {
                //if (strcmp(buff1, "END")!=0)
                //{
                    char f[256]="find ";
                    char s[256]="*";
                    
                    strcat(f,buff1);
                    strcat(f,s);
                    strcat(buff2,f);
                    strcat(buff2," > abc");
                    system(buff2);
                    
                    fptr=fopen("abc","r");
                    while(fgets(buff2,256,fptr)!=NULL)
                        strcat(buff3, buff2);
                    printf("\n%s\n",buff3);
                    fclose(fptr);
                //}
                //else
                //{
                //    printf("\nSuccessfully ended client %s connection\n",inet_ntoa(cli_addr.sin_addr));
                //    break;
                //}
                    
            }
            w=write(acceptfd,buff3,256);
            if(w<0)
            {
                printf("\nSERVER ERROR: Cannot Write.\n");
                close(sockfd);
                exit(1);

            }
            r=read(acceptfd,buff4,256);
            printf("\nFile name received:%s\n",buff4);
            if(r<0)
            {
                printf("\nSERVER ERROR: Cannot read.\n");
                close(sockfd);
                exit(1);
            }
            else
            {    char ls[256]="ls -l";
                char t[256];
                
                strcpy(buff5,buff4);
                strcat(buff4,"> file_1");
                strcpy(ll1,"ls -l ");
                strcat(ll1, buff4);
                        system(ll1);
                fp1 = fopen("file_1","r");
        
                while(fgets(buff6,256,fp1)!=NULL)
                    strcat(buff7, buff6);
                if(buff7[3]=='x')
                {
                    strcpy(t,"File is Executable File and can't be read.");
                    w=write(acceptfd,t,256);
                    if(w<0)
                    {
                        printf("\nSERVER ERROR: Cannot Write.\n");
                        close(sockfd);
                        exit(1);

                    }
                }
                else
                {
                    strcpy(t,"File is not Executable File");
                    fp2= fopen(buff5,"r");
                    while (fgets(buff3, 2048, fp2)!=NULL)
                    strcat(buff4, buff3);
                }
                    
                
                
            }
        }
    }
    
    close(sockfd);
    return 0;
        
            
}

 

 

#include<stdio.h>
#include<stdlib.h>
#include<sys/socket.h>
#include<sys/types.h>
#include<netinet/in.h>
#include<arpa/inet.h>
#include<string.h>

struct sockaddr_in serv_addr;
int skfd,q,w,r;
unsigned int port=5020;
char ip[]="127.0.0.1";
char buff1[256],buff2[256],buff3[256],buff4[256];

 


int main()
{

    skfd=socket(AF_INET,SOCK_STREAM,0);
    if(skfd<0)
    {    
        printf("\nCLIENT ERROR:Cannot Create Socket.\n");
        close(skfd);
            exit(1);
    }
    serv_addr.sin_family=AF_INET;
        serv_addr.sin_port=htons(port);
        inet_aton(ip,(&serv_addr.sin_addr));
    
        int q=connect(skfd,(struct sockaddr*) &serv_addr,sizeof(serv_addr));
        if(q<0)
        {
           printf("\nCLIENT ERROR:Cannot connect to the server.\n");
            close(skfd);
            exit(1);
        }
    
        printf("\nCLIENT:Connected to the server\n");

    while(1)
    {    printf("\nEnter the keyword to search[Enter END to exit]: \n");
        gets(buff1);
        
        w=write(skfd,buff1,256);
        if(w<0)
        {
            printf("\nCLIENT ERROR: Cannot send meassage to the server.\n");
            close(skfd);
            exit(1);
        }
        
        /*int s=strcmp(buff1,"END");
        if(s==0)
            {
                    close(skfd);
            exit(1);
            }
            */
            r=read(skfd,buff2,256);
            if(r<0)
            {
                    printf("\nCLIENT ERROR: Cannot receive mssg from the server.\n");
            }
            else
            {
      

                    printf("\nMessage from server: %s\n",buff2);
                    
                    printf("\nEnter a specific file name:\n");
            gets(buff3);
                    w=write(skfd,buff3,256);
            if(w<0)
            {
                printf("\nCLIENT ERROR: Cannot send meassage to the server.\n");
                close(skfd);
                exit(1);
            }
                  r=read(skfd,buff4,256);
                if(r<0)
                {
                        printf("\nCLIENT ERROR: Cannot receive mssg from the server.\n");
                }
                else

                printf("\nMessage from server: %s\n",buff4);


        }
         
        }
    close(skfd);
    return 0;
    
}