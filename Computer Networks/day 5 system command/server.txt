#include<sys/socket.h>
#include<sys/types.h>
#include<netinet/in.h>
#include<arpa/inet.h>
#include<string.h>
#include<stdio.h>
#include<time.h>
#include<stdlib.h>

struct sockaddr_in serv_addr,cli_addr;
int listenfd,connfd,w,cli_addr_len,abc,xyz,commandr;
unsigned short serv_port= 5003;
char serv_ip[]= "192.168.24.43";
char commandbuff[128];
char commandRes[128];

int main()
{
    printf("\nTCP ECHO SERVER\n");
    listenfd=socket(AF_INET,SOCK_STREAM,0);
    if(listenfd<0)
    {
        printf("\nSERVER ERROR: Cannot Create Socket.\n");
        exit(1);
    }
    serv_addr.sin_family=AF_INET;
    serv_addr.sin_port=htons(serv_port);
    inet_aton(serv_ip,(&serv_addr.sin_addr));
    
    xyz=(bind(listenfd, (struct sockaddr*)&serv_addr,sizeof(serv_addr)));
    
    if(xyz < 0)
    {
        printf("\nSERVER ERROR: Cannot bind.\n");
        close(listenfd);
        exit(1);
    }
    abc = (listen(listenfd,5));
        if(abc < 0)
    {
        printf("\nSERVER ERROR: Cannot listen.\n");
        close(listenfd);
        exit(1);
    }
    
    cli_addr_len= sizeof(cli_addr);
    for(;;)
    {
    printf("\nSERVER: Listenning for clients...Press Ctrl + c to stop echo server:\n");
    connfd = accept(listenfd, (struct sockaddr*)&cli_addr,&cli_addr_len);
    while(1)
    {
    if(connfd < 0)
        {
            printf("\nSERVER ERROR: Cannot accept client connections.\n");
            close(listenfd);
            exit(1);
        }
        printf("\nSERVER : Connection from client %s accepted.                          \n",inet_ntoa(cli_addr.sin_addr));
        
        commandr = read(connfd, commandbuff, 128);
        
        if(commandr < 0){
            printf("\nSERVER ERROR: Command is not valid.\n");
        }else{

            printf("The command is %s\n",commandbuff);
            
            int res = system(commandbuff);
            printf("The result is %d\n",res);
            
            if(res != 0)
            {
                 sprintf(commandRes,"%s","Invalid Command");
                  w = write(connfd,commandRes,128);
            }
            else{
              strcat(commandbuff," > xyz");
              printf("%s\n",commandbuff);
              int test = system(commandbuff);
              w = write(connfd,commandbuff,128);
              /*FILE *ptr = fopen("xyz","r");
              if(test==0)
              {
                  while(fgets(commandRes,50,ptr)!=NULL)
                  {
                  
                      printf("%s\n",commandRes);
                  }
              }*/
        }
    }    
    }
    
}
}

